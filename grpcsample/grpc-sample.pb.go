// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpcsample/grpc-sample.proto

package grpc_sample

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RequestType struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestType) Reset()         { *m = RequestType{} }
func (m *RequestType) String() string { return proto.CompactTextString(m) }
func (*RequestType) ProtoMessage()    {}
func (*RequestType) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_sample_4d800ee30f58ab3a, []int{0}
}
func (m *RequestType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestType.Unmarshal(m, b)
}
func (m *RequestType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestType.Marshal(b, m, deterministic)
}
func (dst *RequestType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestType.Merge(dst, src)
}
func (m *RequestType) XXX_Size() int {
	return xxx_messageInfo_RequestType.Size(m)
}
func (m *RequestType) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestType.DiscardUnknown(m)
}

var xxx_messageInfo_RequestType proto.InternalMessageInfo

type MyFileResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size                 int64    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Mode                 uint32   `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MyFileResponse) Reset()         { *m = MyFileResponse{} }
func (m *MyFileResponse) String() string { return proto.CompactTextString(m) }
func (*MyFileResponse) ProtoMessage()    {}
func (*MyFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_sample_4d800ee30f58ab3a, []int{1}
}
func (m *MyFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MyFileResponse.Unmarshal(m, b)
}
func (m *MyFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MyFileResponse.Marshal(b, m, deterministic)
}
func (dst *MyFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MyFileResponse.Merge(dst, src)
}
func (m *MyFileResponse) XXX_Size() int {
	return xxx_messageInfo_MyFileResponse.Size(m)
}
func (m *MyFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MyFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MyFileResponse proto.InternalMessageInfo

func (m *MyFileResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MyFileResponse) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *MyFileResponse) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

type DownloadRequestType struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadRequestType) Reset()         { *m = DownloadRequestType{} }
func (m *DownloadRequestType) String() string { return proto.CompactTextString(m) }
func (*DownloadRequestType) ProtoMessage()    {}
func (*DownloadRequestType) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_sample_4d800ee30f58ab3a, []int{2}
}
func (m *DownloadRequestType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadRequestType.Unmarshal(m, b)
}
func (m *DownloadRequestType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadRequestType.Marshal(b, m, deterministic)
}
func (dst *DownloadRequestType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadRequestType.Merge(dst, src)
}
func (m *DownloadRequestType) XXX_Size() int {
	return xxx_messageInfo_DownloadRequestType.Size(m)
}
func (m *DownloadRequestType) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadRequestType.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadRequestType proto.InternalMessageInfo

func (m *DownloadRequestType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DownloadFileResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadFileResponse) Reset()         { *m = DownloadFileResponse{} }
func (m *DownloadFileResponse) String() string { return proto.CompactTextString(m) }
func (*DownloadFileResponse) ProtoMessage()    {}
func (*DownloadFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_sample_4d800ee30f58ab3a, []int{3}
}
func (m *DownloadFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadFileResponse.Unmarshal(m, b)
}
func (m *DownloadFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadFileResponse.Marshal(b, m, deterministic)
}
func (dst *DownloadFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadFileResponse.Merge(dst, src)
}
func (m *DownloadFileResponse) XXX_Size() int {
	return xxx_messageInfo_DownloadFileResponse.Size(m)
}
func (m *DownloadFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadFileResponse proto.InternalMessageInfo

func (m *DownloadFileResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*RequestType)(nil), "RequestType")
	proto.RegisterType((*MyFileResponse)(nil), "MyFileResponse")
	proto.RegisterType((*DownloadRequestType)(nil), "DownloadRequestType")
	proto.RegisterType((*DownloadFileResponse)(nil), "DownloadFileResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FileClient is the client API for File service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileClient interface {
	GetMyFile(ctx context.Context, in *RequestType, opts ...grpc.CallOption) (File_GetMyFileClient, error)
	Download(ctx context.Context, in *DownloadRequestType, opts ...grpc.CallOption) (File_DownloadClient, error)
}

type fileClient struct {
	cc *grpc.ClientConn
}

func NewFileClient(cc *grpc.ClientConn) FileClient {
	return &fileClient{cc}
}

func (c *fileClient) GetMyFile(ctx context.Context, in *RequestType, opts ...grpc.CallOption) (File_GetMyFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_File_serviceDesc.Streams[0], "/File/GetMyFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &fileGetMyFileClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type File_GetMyFileClient interface {
	Recv() (*MyFileResponse, error)
	grpc.ClientStream
}

type fileGetMyFileClient struct {
	grpc.ClientStream
}

func (x *fileGetMyFileClient) Recv() (*MyFileResponse, error) {
	m := new(MyFileResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *fileClient) Download(ctx context.Context, in *DownloadRequestType, opts ...grpc.CallOption) (File_DownloadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_File_serviceDesc.Streams[1], "/File/Download", opts...)
	if err != nil {
		return nil, err
	}
	x := &fileDownloadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type File_DownloadClient interface {
	Recv() (*DownloadFileResponse, error)
	grpc.ClientStream
}

type fileDownloadClient struct {
	grpc.ClientStream
}

func (x *fileDownloadClient) Recv() (*DownloadFileResponse, error) {
	m := new(DownloadFileResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FileServer is the server API for File service.
type FileServer interface {
	GetMyFile(*RequestType, File_GetMyFileServer) error
	Download(*DownloadRequestType, File_DownloadServer) error
}

func RegisterFileServer(s *grpc.Server, srv FileServer) {
	s.RegisterService(&_File_serviceDesc, srv)
}

func _File_GetMyFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RequestType)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FileServer).GetMyFile(m, &fileGetMyFileServer{stream})
}

type File_GetMyFileServer interface {
	Send(*MyFileResponse) error
	grpc.ServerStream
}

type fileGetMyFileServer struct {
	grpc.ServerStream
}

func (x *fileGetMyFileServer) Send(m *MyFileResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _File_Download_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DownloadRequestType)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FileServer).Download(m, &fileDownloadServer{stream})
}

type File_DownloadServer interface {
	Send(*DownloadFileResponse) error
	grpc.ServerStream
}

type fileDownloadServer struct {
	grpc.ServerStream
}

func (x *fileDownloadServer) Send(m *DownloadFileResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _File_serviceDesc = grpc.ServiceDesc{
	ServiceName: "File",
	HandlerType: (*FileServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetMyFile",
			Handler:       _File_GetMyFile_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Download",
			Handler:       _File_Download_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "grpcsample/grpc-sample.proto",
}

func init() {
	proto.RegisterFile("grpcsample/grpc-sample.proto", fileDescriptor_grpc_sample_4d800ee30f58ab3a)
}

var fileDescriptor_grpc_sample_4d800ee30f58ab3a = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x49, 0x2f, 0x2a, 0x48,
	0x2e, 0x4e, 0xcc, 0x2d, 0xc8, 0x49, 0xd5, 0x07, 0x31, 0x75, 0x21, 0x6c, 0xbd, 0x82, 0xa2, 0xfc,
	0x92, 0x7c, 0x25, 0x5e, 0x2e, 0xee, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x92, 0x90, 0xca, 0x82,
	0x54, 0x25, 0x1f, 0x2e, 0x3e, 0xdf, 0x4a, 0xb7, 0xcc, 0x9c, 0xd4, 0xa0, 0xd4, 0xe2, 0x82, 0xfc,
	0xbc, 0xe2, 0x54, 0x21, 0x21, 0x2e, 0x96, 0xbc, 0xc4, 0xdc, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d,
	0xce, 0x20, 0x30, 0x1b, 0x24, 0x56, 0x9c, 0x59, 0x95, 0x2a, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x1c,
	0x04, 0x66, 0x83, 0xc4, 0x72, 0xf3, 0x53, 0x52, 0x25, 0x98, 0x15, 0x18, 0x35, 0x78, 0x83, 0xc0,
	0x6c, 0x25, 0x4d, 0x2e, 0x61, 0x97, 0xfc, 0xf2, 0xbc, 0x9c, 0xfc, 0xc4, 0x14, 0x24, 0x4b, 0xb0,
	0x19, 0xa9, 0xa4, 0xc5, 0x25, 0x02, 0x53, 0x8a, 0x6e, 0x7d, 0x4a, 0x62, 0x49, 0x22, 0x58, 0x2d,
	0x4f, 0x10, 0x98, 0x6d, 0x54, 0xcc, 0xc5, 0x02, 0x52, 0x23, 0xa4, 0xc7, 0xc5, 0xe9, 0x9e, 0x5a,
	0x02, 0x71, 0xaf, 0x10, 0x8f, 0x1e, 0x92, 0x15, 0x52, 0xfc, 0x7a, 0xa8, 0xde, 0x50, 0x62, 0x30,
	0x60, 0x14, 0xb2, 0xe6, 0xe2, 0x80, 0xd9, 0x21, 0x24, 0xa2, 0x87, 0xc5, 0x65, 0x52, 0xa2, 0x7a,
	0xd8, 0x1c, 0x01, 0xd2, 0x9c, 0xc4, 0x06, 0x0e, 0x2f, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xb5, 0xe0, 0x92, 0x95, 0x4f, 0x01, 0x00, 0x00,
}
